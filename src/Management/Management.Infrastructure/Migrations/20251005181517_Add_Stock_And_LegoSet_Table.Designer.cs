// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SupplyChain.Management.Infrastructure.Repositories;

#nullable disable

namespace SupplyChain.Management.Infrastructure.Migrations
{
    [DbContext(typeof(ManagementDbContext))]
    [Migration("20251005181517_Add_Stock_And_LegoSet_Table")]
    partial class Add_Stock_And_LegoSet_Table
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SupplyChain.Management.Infrastructure.Repositories.LegoSets.LegoSetEntity", b =>
                {
                    b.Property<string>("SKU")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PieceCount")
                        .HasColumnType("integer");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReleaseYear")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Uom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Weight")
                        .HasColumnType("integer");

                    b.HasKey("SKU");

                    b.HasIndex("Theme", "Weight", "State")
                        .IsUnique();

                    b.ToTable("LegoSet");
                });

            modelBuilder.Entity("SupplyChain.Management.Infrastructure.Repositories.Warehouses.StockEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LegoSetEntitySKU")
                        .HasColumnType("text");

                    b.Property<int>("Placement")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Shelf")
                        .HasColumnType("integer");

                    b.Property<string>("Uom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Warehouse")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LegoSetEntitySKU");

                    b.HasIndex("SKU");

                    b.HasIndex("Warehouse", "SKU", "Quantity")
                        .IsUnique();

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("SupplyChain.Management.Infrastructure.Repositories.Warehouses.StockEntity", b =>
                {
                    b.HasOne("SupplyChain.Management.Infrastructure.Repositories.LegoSets.LegoSetEntity", null)
                        .WithMany("Stocks")
                        .HasForeignKey("LegoSetEntitySKU");

                    b.HasOne("SupplyChain.Management.Infrastructure.Repositories.LegoSets.LegoSetEntity", "LegoSet")
                        .WithMany()
                        .HasForeignKey("SKU")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LegoSet");
                });

            modelBuilder.Entity("SupplyChain.Management.Infrastructure.Repositories.LegoSets.LegoSetEntity", b =>
                {
                    b.Navigation("Stocks");
                });
#pragma warning restore 612, 618
        }
    }
}
